{"version":3,"sources":["components/ExpenseTable.jsx","components/AddButton.jsx","components/ExpenseModal.jsx","components/Main.jsx","components/Header.jsx","App.js","index.js"],"names":["ExpenseTable","data","removeCallback","editCallback","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","id","scope","title","quantity","unitPrice","totalCost","date","onClick","style","cursor","marginLeft","color","AddButton","callback","display","className","initialInputsValue","ExpenseModal","open","onclose","inputValues","useState","input","setInput","useEffect","classes","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","useStyles","handleChange","e","target","name","value","Modal","onClose","aria-labelledby","aria-describedby","top","left","transform","InputLabel","marginTop","Input","type","onChange","defaultValue","Button","variant","initialValue","Date","toLocaleDateString","Main","setData","setOpen","inputvalues","copyData","parseInt","maxID","Math","max","apply","element","splice","findIndex","v","save","newData","filter","removeItem","edit","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a92354f5.chunk.js","sourcesContent":["import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst ExpenseTable = ({ data, removeCallback, editCallback }) => {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>N</TableCell>\r\n                        <TableCell>Title</TableCell>\r\n                        <TableCell align=\"right\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Unit price</TableCell>\r\n                        <TableCell align=\"right\">Total cost</TableCell>\r\n                        <TableCell align=\"right\">Date</TableCell>\r\n                        <TableCell align=\"right\">Delete</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data.map((row, id) => (\r\n                        <TableRow key={id}>\r\n                            <TableCell>{row.id}</TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.title}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                            <TableCell align=\"right\">{row.unitPrice}</TableCell>\r\n                            <TableCell align=\"right\">{row.totalCost}</TableCell>\r\n                            <TableCell align=\"right\">{row.date}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <EditIcon\r\n                                    onClick={() => editCallback(row.id)}\r\n                                    style={{ cursor: 'pointer', marginLeft: '10px' }}\r\n                                />\r\n                                <DeleteIcon\r\n                                    onClick={() => removeCallback(row.id)}\r\n                                    style={{ color: 'red', cursor: 'pointer' }}\r\n                                />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\nexport default ExpenseTable","import React from 'react';\r\nimport './style.css';\r\n\r\nconst AddButton = ({ callback }) => {\r\n    return (\r\n        <div style={{ display: 'flex', 'justifyContent': 'flex-end' }}>\r\n            <button onClick={callback} className=\"add-button\">+</button>\r\n        </div>\r\n    )\r\n}\r\nexport default AddButton","import React, { useState, useEffect } from 'react';\r\nimport Input from '@material-ui/core/Input';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst initialInputsValue = {\r\n    id: 0,\r\n    title: '',\r\n    quantity: 0,\r\n    unitPrice: 0,\r\n}\r\n\r\nconst ExpenseModal = ({ open, callback, onclose, inputValues }) => {\r\n\r\n    const [input, setInput] = useState(initialInputsValue);\r\n    \r\n    useEffect(() => {\r\n        if (inputValues.id > 0) {\r\n            setInput(inputValues);\r\n        }\r\n    }, [inputValues])\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper: {\r\n            position: 'absolute',\r\n            width: 400,\r\n            backgroundColor: theme.palette.background.paper,\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    const modalStyle = {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setInput({ ...input, id: inputValues.id, [e.target.name]: e.target.value })\r\n    }\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={onclose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n        >\r\n            <div style={modalStyle} className={classes.paper}>\r\n                <div className=\"fields\">\r\n                    <InputLabel style={{ marginTop: '20px' }}>Title</InputLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        onChange={handleChange}\r\n                        defaultValue={!!inputValues.title ? inputValues.title : ''}\r\n                    />\r\n                    <InputLabel style={{ marginTop: '20px' }}>Quantity</InputLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"quantity\"\r\n                        onChange={handleChange}\r\n                        defaultValue={!!inputValues.quantity ? inputValues.quantity : ''}\r\n                    />\r\n                    <InputLabel style={{ marginTop: '20px' }}>Unit price</InputLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"unitPrice\"\r\n                        onChange={handleChange}\r\n                        defaultValue={!!inputValues.unitPrice ? inputValues.unitPrice : ''}\r\n                    />\r\n                    <Button\r\n                        style={{ marginTop: '20px' }}\r\n                        onClick={() => callback(input)}\r\n                        variant=\"contained\" color=\"primary\"\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\nexport default ExpenseModal","import React, { useState } from 'react';\r\nimport ExpenseTable from './ExpenseTable';\r\nimport AddButton from './AddButton';\r\nimport ExpenseModal from './ExpenseModal';\r\n\r\nconst initialValue = [\r\n    {\r\n        id: 1,\r\n        title: 'Expense title1',\r\n        quantity: 2,\r\n        unitPrice: 10,\r\n        totalCost: 20,\r\n        date: new Date().toLocaleDateString()\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Expense title2',\r\n        quantity: 2,\r\n        unitPrice: 10,\r\n        totalCost: 20,\r\n        date: new Date().toLocaleDateString()\r\n    }\r\n]\r\n\r\nconst initialInputsValue = {\r\n    id: 0,\r\n    title: '',\r\n    quantity: 0,\r\n    unitPrice: 0,\r\n}\r\nconst Main = () => {\r\n\r\n    const [data, setData] = useState(initialValue);\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState(initialInputsValue);\r\n\r\n    // Modal functions\r\n    const handleOpen = () => {\r\n        setInput(initialInputsValue);\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const removeItem = (id) => {\r\n        const newData = [...data].filter(element => element.id !== id);\r\n        setData(newData);\r\n    }\r\n\r\n    const save = (inputvalues) => {\r\n        const copyData = [...data]\r\n        const quantity = parseInt(inputvalues.quantity)\r\n        const unitPrice = parseInt(inputvalues.unitPrice)\r\n        const date = new Date().toLocaleDateString()\r\n        if (input.id === 0) {\r\n            const maxID = Math.max.apply(Math, copyData.map(element => element.id))\r\n            setData([...data, {\r\n                id: maxID > 0 ? maxID + 1 : 1,\r\n                title: inputvalues.title,\r\n                quantity: quantity,\r\n                unitPrice: unitPrice,\r\n                totalCost: quantity * unitPrice,\r\n                date: date\r\n            }])\r\n        } else {\r\n            copyData.splice(copyData.findIndex(v => v.id === input.id), 1, {\r\n                id: input.id,\r\n                title: inputvalues.title,\r\n                quantity: quantity,\r\n                unitPrice: unitPrice,\r\n                totalCost: quantity * unitPrice,\r\n                date: date\r\n            })\r\n            setData([...copyData])\r\n        }\r\n        setOpen(false)\r\n    }\r\n\r\n    const edit = id => {\r\n        const newData = [...data].filter(element => element.id === id)[0];\r\n        setInput({\r\n            id: id,\r\n            title: newData.title,\r\n            quantity: newData.quantity,\r\n            unitPrice: newData.unitPrice\r\n        })\r\n        setOpen(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ExpenseModal\r\n                open={open}\r\n                onclose={handleClose}\r\n                callback={value => save(value)}\r\n                inputValues={input}\r\n            />\r\n            <AddButton callback={handleOpen} />\r\n            <ExpenseTable\r\n                data={data}\r\n                removeCallback={id => removeItem(id)}\r\n                editCallback={id => edit(id)}\r\n            />\r\n        </>\r\n    );\r\n}\r\nexport default Main","import React from 'react'\r\nimport './style.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"title\">Expense Tracker App</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\nimport Main from './components/Main'\nimport Header from './components/Header'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}